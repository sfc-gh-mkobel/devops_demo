name: Deploy data pipeline

# Action will run on pushes to selected branches
on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-18.04

    env:
      env:
      PYTHON_VERSION: '3.8'
      REPO_NAME: "DEMO_REPO"
      # Read connection secrets
      SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_MYCONNECTION_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}
      SNOWFLAKE_CONNECTIONS_MYCONNECTION_AUTHENTICATOR: 'SNOWFLAKE_JWT'
      
    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.8
      
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
    
      # Install Snowflake CLI GitHub Action and point to config file
      - name: Install snowflake-cli
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: ".snowflake/config.toml"

      - name: 'Show Connection test'
        run:
          snow connection test  
      
      # Update Snowflake's copy of the repository
      - name: Fetch repository changes
        run:
          snow git fetch "${REPO_NAME}"

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      
      # Deploy pipeline with branch specific parameters
      - name: Deploy data pipeline to ${{ github.ref_name }}
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          snow git execute @${REPO_NAME}/branches/${BRANCH_NAME}/devops/  \
            -D "env='${BRANCH_NAME}'" \
            -D "t_vacation_spots_data_retention_days=1"


